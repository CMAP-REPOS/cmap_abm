Label,Description,Expression,DRIVEALONE,SHAREDRIDE2,SHAREDRIDE3,WALK,BIKE,WALK_TRANSIT,PNR_TRANSIT,KNR_TRANSIT,TNC_TRANSIT,TAXI,TNC_SINGLE,TNC_SHARED
#,Drive alone no toll,,,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,DRIVEALONE - Unavailable,sov_available == False,-999,,,,,,,,,,
util_DRIVEALONE_Unavailable_for_zero_auto_households,DRIVEALONE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,
util_DRIVEALONE_Unavailable_for_persons_less_than_16,DRIVEALONE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,
util_DRIVEALONE_Unavailable_for_joint_tours,DRIVEALONE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,
util_DRIVEALONE_Unavailable_if_didn't_drive_to_work,DRIVEALONE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,
util_DRIVEALONE_In_vehicle_time,DRIVEALONE - In-vehicle time,@odt_skims['SOV_NT_M_TIME'],coef_ivt,,,,,,,,,
#util_DRIVEALONE_Terminal_time,DRIVEALONE - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,coef_ivt,,,,,,,,,
util_DRIVEALONE_Operating_cost,DRIVEALONE - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_NT_M_DIST']),coef_ivt,,,,,,,,,
util_DRIVEALONE_Parking_cost,DRIVEALONE - Parking cost,@ivt_cost_multiplier * df.ivot * df.total_parking_cost,coef_ivt,,,,,,,,,
util_DRIVEALONE_Bridge_toll,DRIVEALONE - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_NT_M_TOLLCOST']),coef_ivt,,,,,,,,,
util_DRIVEALONE_Person_is_between_16_and_19_years_old,DRIVEALONE - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),coef_age1619_da,,,,,,,,,
#,Shared ride 2,,,,,,,,,,,,,,
util_SHAREDRIDE2_Unavailable,SHAREDRIDE2 - Unavailable,hov2_available == False,,-999,,,,,,,,,
util_SHAREDRIDE2_Unavailable_based_on_party_size,SHAREDRIDE2 - Unavailable based on party size,is_joint & (number_of_participants > 2),,-999,,,,,,,,
util_SHAREDRIDE2_In_vehicle_time,SHAREDRIDE2 - In-vehicle time,@(odt_skims['HOV2_M_TIME']),,coef_ivt,,,,,,,,
#util_SHAREDRIDE2_Terminal_time,SHAREDRIDE2 - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,coef_ivt,,,,,,,,
util_SHAREDRIDE2_Operating_cost,SHAREDRIDE2 - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_M_DIST']),,coef_ivt,,,,,,,,
util_SHAREDRIDE2_Parking_cost,SHAREDRIDE2 - Parking cost,@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,,coef_ivt,,,,,,,,
util_SHAREDRIDE2_Bridge_toll,SHAREDRIDE2 - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST']) / costShareSr2,,coef_ivt,,,,,,,,
util_SHAREDRIDE2_One_person_household,SHAREDRIDE2 - One person household,@(df.hhsize == 1),,coef_hhsize1_sr,,,,,,,,
util_SHAREDRIDE2_Two_person_household,SHAREDRIDE2 - Two person household,@(df.hhsize == 2),,coef_hhsize2_sr,,,,,,,,
util_SHAREDRIDE2_Person_is_16_years_old_or_older,SHAREDRIDE2 - Person is 16 years old or older,@(df.age >= 16),,coef_age16p_sr,,,,,,,,
#,Shared ride 3+,,,,,,,,,,,,,,
util_SHAREDRIDE3_Unavailable,SHAREDRIDE3 - Unavailable,hov3_available == False,,,-999,,,,,,,
util_SHAREDRIDE3_In_vehicle_time,SHAREDRIDE3 - In-vehicle time,@(odt_skims['HOV3_M_TIME']),,,coef_ivt,,,,,,,
#util_SHAREDRIDE3_Terminal_time,SHAREDRIDE3 - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,,coef_ivt,,,,,,,
util_SHAREDRIDE3_Operating_cost,SHAREDRIDE3 - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_M_DIST']),,,coef_ivt,,,,,,,
util_SHAREDRIDE3_Parking_cost,SHAREDRIDE3 - Parking cost,@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,,,coef_ivt,,,,,,,
util_SHAREDRIDE3_Bridge_toll,SHAREDRIDE3 - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_M_TOLLCOST']) / costShareSr3,,,coef_ivt,,,,,,,
util_SHAREDRIDE3_One_person_household,SHAREDRIDE3 - One person household,@(df.hhsize == 1),,,coef_hhsize1_sr,,,,,,,
util_SHAREDRIDE3_Two_person_household,SHAREDRIDE3 - Two person household,@(df.hhsize == 2),,,coef_hhsize2_sr,,,,,,,
util_SHAREDRIDE3_Person_is_16_years_old_or_older,SHAREDRIDE3 - Person is 16 years old or older,@(df.age >= 16),,,coef_age16p_sr,,,,,,,
#,Walk,,,,,,,,,,,,,,
util_WALK_Time_up_to_2_miles,WALK - Time up to 2 miles,@walktimeshort_multiplier * (od_skims['DIST'].clip(upper=walkThresh) + od_skims.reverse('DIST').clip(upper=walkThresh))*60/walkSpeed,,,,coef_ivt,,,,,,
util_WALK_Time_beyond_2_of_a_miles,WALK - Time beyond 2 of a miles,@walktimelong_multiplier * ((od_skims['DIST'] - walkThresh).clip(lower=0) + (od_skims.reverse('DIST') - walkThresh).clip(lower=0))*60/walkSpeed,,,,coef_ivt,,,,,,
util_WALK_Destination_zone_densityIndex,WALK - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,coef_ivt,,,,,,
util_WALK_Topology,WALK - Topology,@topology_walk_multiplier * df.trip_topology,,,,coef_ivt,,,,,,
#,Bike,,,,,,,,,,,,,,
util_BIKE_Unavailable_if_didn't_bike_to_work,BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,-999,,,,,
util_BIKE_Time_up_to_6_miles,BIKE - Time up to 6 miles,@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,coef_ivt,,,,,
util_BIKE_Time_beyond_6_of_a_miles,BIKE - Time beyond 6 of a miles,@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,coef_ivt,,,,,
util_BIKE_Destination_zone_densityIndex,BIKE - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,,coef_ivt,,,,,
util_BIKE_Topology,BIKE - Topology,@topology_bike_multiplier * df.trip_topology,,,,,coef_ivt,,,,,
#,Walk to Transit,,,,,,,,,,,,,,
#util_WALK_TRANSIT_Unavailable,WALK_TRANSIT - Unavailable,walk_transit_available == False,,,,,,,,,-999,,,,
util_WALK_TRANSIT_Paths_logsums,WALK_TRANSIT - Path logsums,@tvpb_logsum_odt['WTW'],,,,,,coef_one,,,,
util_WALK_TRANSIT_Destination_zone_densityIndex,WALK_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,coef_ivt,,,,
#util_WALK_TRANSIT_Topology,WALK_TRANSIT - Topology,@coef_topology_trn_multiplier * df.trip_topology,,,,,,coef_ivt,,,,
util_WALK_TRANSIT_Person_is_less_than_10_years_old,WALK_TRANSIT - Person is less than 10 years old,@(df.age <= 10),,,,,,coef_age010_trn,,,,
#PNR Transit
#util_PNR_TRANSIT_Unavailable,PNR_TRANSIT - Unavailable,drive_transit_available == False,,,,,,,-999,,,
util_PNR_TRANSIT_Unavailable_for_zero_auto_households,PNR_TRANSIT - Unavailable for zero auto households,auto_ownership == 0,,,,,,,-999,,,
util_PNR_TRANSIT_Unavailable_for_persons_less_than_16,PNR_TRANSIT - Unavailable for persons less than 16,age < 16,,,,,,,-999,,,
util_PNR_TRANSIT_Paths_logsums,PNR_TRANSIT - Path logsums,@tvpb_logsum_odt['DTW'],,,,,,,coef_one,,,
util_PNR_TRANSIT_Destination_zone_densityIndex,PNR_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,coef_ivt,,,
#util_PNR_TRANSIT_Topology,PNR_TRANSIT - Topology,@coef_topology_trn_multiplier * df.trip_topology,,,,,,,coef_ivt,,,
util_PNR_TRANSIT_Person_is_less_than_10_years_old,PNR_TRANSIT - Person is less than 10 years old,@(df.age < 10),,,,,,,coef_age010_trn,,,
#KNR Transit
#util_KNR_TRANSIT_Unavailable,KNR_TRANSIT - Unavailable,drive_transit_available == False,,,,,,,,-999,,,
util_KNR_TRANSIT_Unavailable_for_zero_auto_households,KNR_TRANSIT - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,-999,,,
util_KNR_TRANSIT_Unavailable_for_persons_less_than_16,KNR_TRANSIT - Unavailable for persons less than 16,age < 16,,,,,,,,-999,,,
util_KNR_TRANSIT_Paths_logsums,KNR_TRANSIT - Path logsums,@tvpb_logsum_odt['KTW'],,,,,,,,coef_one,,,
util_KNR_TRANSIT_Destination_zone_densityIndex,KNR_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,coef_ivt,,,
#util_KNR_TRANSIT_Topology,KNR_TRANSIT - Topology,@coef_topology_trn_multiplier * df.trip_topology,,,,,,,,coef_ivt,,,
util_KNR_TRANSIT_Person_is_less_than_10_years_old,KNR_TRANSIT - Person is less than 10 years old,@(df.age < 10),,,,,,,,coef_age010_trn,,,
#TNC Transit
#util_TNC_TRANSIT_Unavailable,TNC_TRANSIT - Unavailable,drive_transit_available == False,,,,,,,,,-999,,,
util_TNC_TRANSIT_Unavailable_for_zero_auto_households,TNC_TRANSIT - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,-999,,,
util_TNC_TRANSIT_Unavailable_for_persons_less_than_16,TNC_TRANSIT - Unavailable for persons less than 16,age < 16,,,,,,,,,-999,,,
util_TNC_TRANSIT_Paths_logsums,TNC_TRANSIT - Path logsums,@tvpb_logsum_odt['NTW'],,,,,,,,,coef_one,,,
util_TNC_TRANSIT_Destination_zone_densityIndex,TNC_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,,coef_ivt,,,
#util_TNC_TRANSIT_Topology,TNC_TRANSIT - Topology,@coef_topology_trn_multiplier * df.trip_topology,,,,,,,,,coef_ivt,,,
util_TNC_TRANSIT_Person_is_less_than_10_years_old,TNC_TRANSIT - Person is less than 10 years old,@(df.age < 10),,,,,,,,,coef_age010_trn,,,
#,Taxi,,,,,,,,,,,,,,
util_Taxi_In_vehicle_time,Taxi - In-vehicle time,@(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']),,,,,,,,,,coef_ivt,,
util_Taxi_Wait_time,Taxi - Wait time,@ridehail_wait_time_multiplier * df.origTaxiWaitTime,,,,,,,,,,coef_ivt,,
util_Taxi_Tolls,Taxi - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST']),,,,,,,,,,coef_ivt,,
util_Taxi_Bridge_toll,Taxi - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST']),,,,,,,,,,coef_ivt,,
util_Taxi_Fare,Taxi - Fare,@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2_M_DIST'] * Taxi_costPerMile +odt_skims['HOV2_M_TIME'] * Taxi_costPerMinute)*100,,,,,,,,,,coef_ivt,,
#,TNC Single,,,,,,,,,,,,,,
util_TNC_Single_In_vehicle_time,TNC Single - In-vehicle time,@odt_skims['HOV2_M_TIME'],,,,,,,,,,,coef_ivt,
util_TNC_Single_Wait_time,TNC Single - Wait time,@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,,,,,,,,,,,coef_ivt,
util_TNC_Single_Tolls,TNC Single - Tolls,@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_M_TOLLCOST'],,,,,,,,,,,coef_ivt,
util_TNC_Single_Bridge_toll,TNC Single - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,,,,coef_ivt,
util_TNC_Single_Cost,TNC Single - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2_M_DIST'] * TNC_single_costPerMile + odt_skims['HOV2_M_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",,,,,,,,,,,coef_ivt,
#,#TNC Shared,,,,,,,,,,,,,,
util_TNC_Shared_In_vehicle_time,TNC Shared - In-vehicle time,@odt_skims['HOV2_M_TIME'] * TNC_shared_IVTFactor,,,,,,,,,,,,coef_ivt
util_TNC_Shared_Wait_time,TNC Shared - Wait time,@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,,,,,,,,,,,,coef_ivt
util_TNC_Shared_Tolls,TNC Shared - Tolls,@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_M_TOLLCOST'],,,,,,,,,,,,coef_ivt
util_TNC_Shared_Bridge_toll,TNC Shared - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,,,,,coef_ivt
util_TNC_Shared_Cost,TNC Shared - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2_M_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2_M_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",,,,,,,,,,,,coef_ivt
#,,,,,,,,,,,,,,,
util_tour_mode_is_auto,Auto tour mode availability,tour_mode_is_auto,,,,,-999,,,,,,
util_tour_mode_is_walk,Walk tour mode availability,tour_mode_is_walk,-999,-999,-999,,-999,,-999,-999,,
util_tour_mode_is_bike,Bike tour mode availability,tour_mode_is_bike,-999,-999,-999,,,,-999,-999,-999,,,
util_tour_mode_is_walk_transit,Walk to Transit tour mode availability,tour_mode_is_walk_transit,-999,,,,,,-999,-999,-999,
util_tour_mode_is_drive_transit,Drive to Transit tour modes availability,tour_mode_is_drive_transit,-999,,,,-999,,-999,-999,,
util_tour_mode_is_ride_hail,Ride hail tour modes availability,tour_mode_is_ride_hail,-999,,,,-999,,-999,-999,,
#indiv tour ASCs,,,,,,,,,,,,,,
util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,Drive Alone tour mode ASC -- shared ride 2,@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,sov_ASC_sr2,,,,,,,,,,
util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,Drive Alone tour mode ASC -- shared ride 3+,@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,sov_ASC_sr3p,,,,,,,,
util_Drive_Alone_tour_mode_ASC_walk,Drive Alone tour mode ASC -- walk,@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,sov_ASC_walk,,,,,,
util_Drive_Alone_tour_mode_ASC_ride_hail,Drive Alone tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,,,,,,sov_ASC_rh,sov_ASC_rh,sov_ASC_rh
util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,Shared Ride 2 tour mode ASC -- shared ride 2,@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,sr2_ASC_sr2,,,,,,,,,,
util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,Shared Ride 2 tour mode ASC -- shared ride 3+,@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,sr2_ASC_sr3p,,,,,,,,
util_Shared_Ride_2_tour_mode_ASC_walk,Shared Ride 2 tour mode ASC -- walk,@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,sr2_ASC_walk,,,,,,
util_Shared_Ride_2_tour_mode_ASC_ride_hail,Shared Ride 2 tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,,,,,,sr2_ASC_rh,sr2_ASC_rh,sr2_ASC_rh
util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,Shared Ride 3+ tour mode ASC -- shared ride 2,@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,sr3p_ASC_sr2,,,,,,,,,,
util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,Shared Ride 3+ tour mode ASC -- shared ride 3+,@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,sr3p_ASC_sr3p,,,,,,,,
util_Shared_Ride_3_tour_mode_ASC_walk,Shared Ride 3+ tour mode ASC -- walk,@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,sr3p_ASC_walk,,,,,,
util_Shared_Ride_3_tour_mode_ASC_ride_hail,Shared Ride 3+ tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,,,,,,sr3p_ASC_rh,sr3p_ASC_rh,sr3p_ASC_rh
util_Walk_tour_mode_ASC_ride_hail,Walk tour mode ASC -- ride hail,@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),,,,,,,,,,walk_ASC_rh,walk_ASC_rh,walk_ASC_rh
util_Bike_tour_mode_ASC_walk,Bike tour mode ASC -- walk,@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),,,,bike_ASC_walk,,,,,,
util_Bike_tour_mode_ASC_ride_hail,Bike tour mode ASC -- ride hail,@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,bike_ASC_rh,bike_ASC_rh,bike_ASC_rh
util_Ride_Hail_tour_mode_ASC_shared_ride_2,Ride Hail tour mode ASC -- shared ride 2,@(df.is_indiv & df.tour_mode_is_ride_hail),,ride_hail_ASC_sr2,,,,,,,,,,
util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,Ride Hail tour mode ASC -- shared ride 3+,@(df.is_indiv & df.tour_mode_is_ride_hail),,,ride_hail_ASC_sr3p,,,,,,,,
util_Ride_Hail_tour_mode_ASC_walk,Ride Hail tour mode ASC -- walk,@(df.is_indiv & df.tour_mode_is_ride_hail),,,,ride_hail_ASC_walk,,,,,,
util_Ride_Hail_tour_mode_ASC_walk_to_transit,Ride Hail tour mode ASC -- walk to transit,@(df.is_indiv & df.tour_mode_is_ride_hail),,,,,,ride_hail_ASC_walk_transit,,,,
util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,Ride Hail tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,ride_hail_ASC_taxi,,
util_Ride_Hail_tour_mode_ASC_ride_hail_single,Ride Hail tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,ride_hail_ASC_tnc_single,
util_Ride_Hail_tour_mode_ASC_ride_hail_shared,Ride Hail tour mode ASC -- ride hail,@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,ride_hail_ASC_tnc_shared
#FIXME ASR to fix everything below this
#,joint tour ASCs,,,,,,,,,,,,,,
#util_joint_auto_tour_mode_ASC_shared_ride_2,joint - auto tour mode ASC -- shared ride 2,@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,joint_auto_ASC_sr2,joint_auto_ASC_sr2,,,,,,,,,
#util_joint_auto_tour_mode_ASC_shared_ride_3_,joint - auto tour mode ASC -- shared ride 3+,@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,joint_auto_ASC_sr3p,joint_auto_ASC_sr3p,,,,,,,
#util_joint_auto_tour_mode_ASC_walk,joint - auto tour mode ASC -- walk,@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,,,joint_auto_ASC_walk,,,,,,
#util_joint_auto_tour_mode_ASC_ride_hail,joint - auto tour mode ASC -- ride hail,@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,joint_auto_ASC_rh,joint_auto_ASC_rh,joint_auto_ASC_rh
#util_joint_Walk_tour_mode_ASC_ride_hail,joint - Walk tour mode ASC -- ride hail,@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,joint_walk_ASC_rh,,,,,,
#util_joint_Bike_tour_mode_ASC_walk,joint - Bike tour mode ASC -- walk,@df.is_joint & (df.i_tour_mode == I_BIKE_MODE),,,,,,,joint_bike_ASC_walk,,,,,,
#util_joint_Bike_tour_mode_ASC_ride_hail,joint - Bike tour mode ASC -- ride hail,@df.is_joint & (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,,joint_bike_ASC_rh,joint_bike_ASC_rh,joint_bike_ASC_rh
#util_joint_Walk_to_Transit_tour_mode_ASC_walk,joint - Walk to Transit tour mode ASC -- walk,@(df.is_joint & df.tour_mode_is_walk_transit),,,,,,,joint_walk_transit_ASC_walk,,,,,,
#util_joint_Walk_to_Transit_tour_mode_ASC_ride_hail,joint - Walk to Transit tour mode ASC -- ride hail,@(df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,joint_walk_transit_ASC_rh,joint_walk_transit_ASC_rh,joint_walk_transit_ASC_rh
#util_joint_Drive_to_Transit_tour_mode_ASC_ride_hail,joint - Drive to Transit tour mode ASC -- ride hail,@(df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,joint_drive_transit_ASC_rh,joint_drive_transit_ASC_rh,joint_drive_transit_ASC_rh
#util_joint_Ride_Hail_tour_mode_ASC_shared_ride_2,joint - Ride Hail tour mode ASC -- shared ride 2,@(df.is_joint & df.tour_mode_is_ride_hail),,,joint_ride_hail_ASC_sr2,joint_ride_hail_ASC_sr2,,,,,,,,,
#util_joint_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,joint - Ride Hail tour mode ASC -- shared ride 3+,@(df.is_joint & df.tour_mode_is_ride_hail),,,,,joint_ride_hail_ASC_sr3p,joint_ride_hail_ASC_sr3p,,,,,,,
#util_joint_Ride_Hail_tour_mode_ASC_walk,joint - Ride Hail tour mode ASC -- walk,@(df.is_joint & df.tour_mode_is_ride_hail),,,,,,,joint_ride_hail_ASC_walk,,,,,,
#util_joint_Ride_Hail_tour_mode_ASC_walk_to_transit,joint - Ride Hail tour mode ASC -- walk to transit,@(df.is_joint & df.tour_mode_is_ride_hail),,,,,,,,,joint_ride_hail_ASC_walk_transit,joint_ride_hail_ASC_walk_transit,,,
#util_joint_Ride_Hail_tour_mode_ASC_ride_hail_taxi,joint - Ride Hail tour mode ASC -- ride hail,@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,joint_ride_hail_ASC_taxi,,
#util_joint_Ride_Hail_tour_mode_ASC_ride_hail_single,joint - Ride Hail tour mode ASC -- ride hail,@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,joint_ride_hail_ASC_tnc_single,
#util_joint_Ride_Hail_tour_mode_ASC_ride_hail_shared,joint - Ride Hail tour mode ASC -- ride hail,@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,joint_ride_hail_ASC_tnc_shared
#,#,,,,,,,,,,,,,,
#util_Walk_not_available_for_long_distances,Walk not available for long distances,@df.tour_mode_is_walk & (od_skims['DIST'] > 3),,,,,,,-999,,,,,,
#util_Bike_not_available_for_long_distances,Bike not available for long distances,@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),,,,,,,,-999,,,,,
#util_origin_density_index,Origin density index,@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),,,,,,,coef_ivt,coef_ivt,coef_ivt,coef_ivt,,coef_ivt,coef_ivt
#util_walk_express_penalty,Walk-express penalty for intermediate stops,@walk_express_penalty * ~(df.first_trip | df.first_trip),,,,,,,,,,,,,
#util_adjust_tnc_shared,TNC shared adjustment,@adjust_tnc_shared,,,,,,,,,,,,coef_ivt
