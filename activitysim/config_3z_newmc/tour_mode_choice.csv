Label,Description,Expression,DRIVEALONE,SHAREDRIDE2,SHAREDRIDE3,WALK,BIKE,WALK_TRANSIT,DRIVE_TRANSIT,TAXI,TNC_SINGLE,TNC_SHARED
#,Drive alone no toll,,,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,DRIVEALONE - Unavailable,sov_available == False,-999,,,,,,,,,
util_DRIVEALONE_Unavailable_for_zero_auto_households,DRIVEALONE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,
util_DRIVEALONE_Unavailable_for_persons_less_than_16,DRIVEALONE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,
util_DRIVEALONE_Unavailable_for_joint_tours,DRIVEALONE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,
util_DRIVEALONE_Unavailable_if_didn't_drive_to_work,DRIVEALONE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,
util_DRIVEALONE_In_vehicle_time,DRIVEALONE - In-vehicle time,@odt_skims['SOV_NT_M_TIME'] + dot_skims['SOV_NT_M_TIME'],coef_ivt,,,,,,,,
util_DRIVEALONE_Terminal_time,DRIVEALONE - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,coef_ivt,,,,,,,,
util_DRIVEALONE_Operating_cost,DRIVEALONE - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_NT_M_DIST'] + dot_skims['SOV_NT_M_DIST']),coef_ivt,,,,,,,,
util_DRIVEALONE_Parking_cost,DRIVEALONE - Parking cost,@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,coef_ivt,,,,,,,,
util_DRIVEALONE_Bridge_toll,DRIVEALONE - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_NT_M_TOLLCOST'] + dot_skims['SOV_NT_M_TOLLCOST']),coef_ivt,,,,,,,,
util_DRIVEALONE_Person_is_between_16_and_19_years_old,DRIVEALONE - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),coef_age1619_da_multiplier,,,,,,,,
#,Shared ride 2,,,,,,,,,,,,,,
util_SHAREDRIDE2_Unavailable,SHAREDRIDE2 - Unavailable,hov2_available == False,,-999,,,,,,,,
util_SHAREDRIDE2_Unavailable_based_on_party_size,SHAREDRIDE2 - Unavailable based on party size,is_joint & (number_of_participants > 2),,-999,,,,,,,
util_SHAREDRIDE2_In_vehicle_time,SHAREDRIDE2 - In-vehicle time,@(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']),,coef_ivt,,,,,,,
util_SHAREDRIDE2_Terminal_time,SHAREDRIDE2 - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,coef_ivt,,,,,,,
util_SHAREDRIDE2_Operating_cost,SHAREDRIDE2 - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_M_DIST'] + dot_skims['HOV2_M_DIST']),,coef_ivt,,,,,,,
util_SHAREDRIDE2_Parking_cost,SHAREDRIDE2 - Parking cost,@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,,coef_ivt,,,,,,,
util_SHAREDRIDE2_Bridge_toll,SHAREDRIDE2 - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']) / costShareSr2,,coef_ivt,,,,,,,
util_SHAREDRIDE2_One_person_household,SHAREDRIDE2 - One person household,@(df.hhsize == 1),,coef_hhsize1_sr_multiplier,,,,,,,
util_SHAREDRIDE2_Two_person_household,SHAREDRIDE2 - Two person household,@(df.hhsize == 2),,coef_hhsize2_sr_multiplier,,,,,,,
util_SHAREDRIDE2_Person_is_16_years_old_or_older,SHAREDRIDE2 - Person is 16 years old or older,@(df.age >= 16),,coef_age16p_sr_multiplier,,,,,,,
#,Shared ride 3+,,,,,,,,,,,,,,
util_SHAREDRIDE3_Unavailable,SHAREDRIDE3 - Unavailable,hov3_available == False,,,-999,,,,,,
util_SHAREDRIDE3_In_vehicle_time,SHAREDRIDE3 - In-vehicle time,@(odt_skims['HOV3_M_TIME'] + dot_skims['HOV3_M_TIME']),,,coef_ivt,,,,,,
util_SHAREDRIDE3_Terminal_time,SHAREDRIDE3 - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,,coef_ivt,,,,,,
util_SHAREDRIDE3_Operating_cost,SHAREDRIDE3 - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_M_DIST'] + dot_skims['HOV3_M_DIST']),,,coef_ivt,,,,,,
util_SHAREDRIDE3_Parking_cost,SHAREDRIDE3 - Parking cost,@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,,,coef_ivt,,,,,,
util_SHAREDRIDE3_Bridge_toll,SHAREDRIDE3 - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_M_TOLLCOST'] + dot_skims['HOV3_M_TOLLCOST']) / costShareSr3,,,coef_ivt,,,,,,
util_SHAREDRIDE3_One_person_household,SHAREDRIDE3 - One person household,@(df.hhsize == 1),,,coef_hhsize1_sr_multiplier,,,,,,
util_SHAREDRIDE3_Two_person_household,SHAREDRIDE3 - Two person household,@(df.hhsize == 2),,,coef_hhsize2_sr_multiplier,,,,,,
util_SHAREDRIDE3_Person_is_16_years_old_or_older,SHAREDRIDE3 - Person is 16 years old or older,@(df.age >= 16),,,coef_age16p_sr_multiplier,,,,,,
#,Walk,,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,
util_WALK_Time_up_to_2_miles,WALK - Time up to 2 miles,@walktimeshort_multiplier * (od_skims['DIST'].clip(upper=walkThresh) + od_skims.reverse('DIST').clip(upper=walkThresh))*60/walkSpeed,,,,coef_ivt,,,,,
util_WALK_Time_beyond_2_of_a_miles,WALK - Time beyond 2 of a miles,@walktimelong_multiplier * ((od_skims['DIST'] - walkThresh).clip(lower=0) + (od_skims.reverse('DIST') - walkThresh).clip(lower=0))*60/walkSpeed,,,,coef_ivt,,,,,
util_WALK_Destination_zone_densityIndex,WALK - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,coef_ivt,,,,,
util_WALK_Topology,WALK - Topology,@coef_topology_walk_multiplier * df.dest_topology,,,,coef_ivt,,,,,
#,Bike,,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,
util_BIKE_Unavailable_if_didn't_bike_to_work,BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,-999,,,,
util_BIKE_Time_up_to_6_miles,BIKE - Time up to 6 miles,@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,coef_ivt,,,,
util_BIKE_Time_beyond_6_of_a_miles,BIKE - Time beyond 6 of a miles,@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,coef_ivt,,,,
util_BIKE_Destination_zone_densityIndex,BIKE - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,,coef_ivt,,,,
util_BIKE_Topology,BIKE - Topology,@coef_topology_bike_multiplier * df.dest_topology,,,,,coef_ivt,,,,
#,Walk to Local,,,,,,,,,,,,,,
#util_WALK_TRANSIT_Unavailable,WALK_TRANSIT - Unavailable,walk_transit_available == False,,,,,,-999,,,
util_WALK_TRANSIT_Paths_logsums,WALK_TRANSIT - Path logsums,@tvpb_logsum_odt['WTW'] + tvpb_logsum_dot['WTW'],,,,,,coef_one,,,
util_WALK_TRANSIT_Destination_zone_densityIndex,WALK_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,coef_ivt,,,
util_WALK_TRANSIT_Topology,WALK_TRANSIT - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,coef_ivt,,,
util_WALK_TRANSIT_Person_is_less_than_10_years_old,WALK_TRANSIT - Person is less than 10 years old,@(df.age <= 10),,,,,,coef_age010_trn_multiplier,,,
#,Drive to Local,,,,,,,,,,,,,,
util_DRIVE_TRANSIT_Unavailable,DRIVE_TRANSIT - Unavailable,drive_transit_available == False,,,,,,,-999,,
util_DRIVE_TRANSIT_Unavailable_for_zero_auto_households,DRIVE_TRANSIT - Unavailable for zero auto households,auto_ownership == 0,,,,,,,-999,,
util_DRIVE_TRANSIT_Unavailable_for_persons_less_than_16,DRIVE_TRANSIT - Unavailable for persons less than 16,age < 16,,,,,,,-999,,
util_DRIVE_TRANSIT_Paths_logsums,DRIVE_TRANSIT - Path logsums,@tvpb_logsum_odt['DTW'] + tvpb_logsum_dot['WTD'],,,,,,,coef_one,,
util_DRIVE_TRANSIT_Destination_zone_densityIndex,DRIVE_TRANSIT - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,coef_ivt,,
#util_DRIVE_TRANSIT_Topology,DRIVE_TRANSIT - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,,coef_ivt,,
util_DRIVE_TRANSIT_Person_is_less_than_10_years_old,DRIVE_TRANSIT - Person is less than 10 years old,@(df.age < 10),,,,,,,coef_age010_trn_multiplier,,
#,Taxi,,,,,,,,,,,,,,
util_Taxi_In_vehicle_time,Taxi - In-vehicle time,@(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']),,,,,,,,coef_ivt,,
#, FIXME magic constant 1.5,,,,,,,,,,,,,,
util_Taxi_Wait_time,Taxi - Wait time,@1.5 * df.totalWaitTaxi,,,,,,,,coef_ivt,
util_Taxi_Tolls,Taxi - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,coef_ivt,,
util_Taxi_Bridge_toll,Taxi - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,coef_ivt,,
util_Taxi_Fare,Taxi - Fare,@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2_M_DIST'] + dot_skims['HOV2_M_DIST']) * Taxi_costPerMile +(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']) * Taxi_costPerMinute)*100,,,,,,,,coef_ivt,,
#,TNC Single,,,,,,,,,,,,,,
util_TNC_Single_In_vehicle_time,TNC Single - In-vehicle time,@(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']),,,,,,,,,coef_ivt,
util_TNC_Single_Wait_time,TNC Single - Wait time,@1.5 * df.totalWaitSingleTNC,,,,,,,,,coef_ivt,
util_TNC_Single_Tolls,TNC Single - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,,coef_ivt,
util_TNC_Single_Bridge_toll,TNC Single - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + odr_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST'] + dor_skims['HOV2_M_TOLLCOST']),,,,,,,,,coef_ivt,
util_TNC_Single_Cost,TNC Single - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2_M_DIST'] + dot_skims['HOV2_M_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum)",,,,,,,,,coef_ivt,
#,TNC Shared,,,,,,,,,,,,,,
util_TNC_Shared_In_vehicle_time,TNC Shared - In-vehicle time,@(odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']) * TNC_shared_IVTFactor,,,,,,,,,,coef_ivt
#, FIXME magic constant 1.5,,,,,,,,,,,,,,
util_TNC_Shared_Wait_time,TNC Shared - Wait time,@1.5 * df.totalWaitSharedTNC,,,,,,,,,,coef_ivt
util_TNC_Shared_Tolls,TNC Shared - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST']),,,,,,,,,,coef_ivt
util_TNC_Shared_Bridge_toll,TNC Shared - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_M_TOLLCOST'] + odr_skims['HOV2_M_TOLLCOST'] + dot_skims['HOV2_M_TOLLCOST'] + dor_skims['HOV2_M_TOLLCOST']),,,,,,,,,,coef_ivt
util_TNC_Shared_Cost,TNC Shared - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2_M_DIST'] + dot_skims['HOV2_M_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2_M_TIME'] + dot_skims['HOV2_M_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum)",,,,,,,,,,coef_ivt
#,indiv tour ASCs,,,,,,,,,,,,,, 
util_Walk_ASC_Zero_auto,Walk ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,walk_ASC_no_auto,,,,,,
util_Walk_ASC_Auto_deficient,Walk ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,walk_ASC_auto_deficient,,,,,,
util_Walk_ASC_Auto_sufficient,Walk ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,walk_ASC_auto_sufficient,,,,,,
util_Bike_ASC_Zero_auto,Bike ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,bike_ASC_no_auto,,,,,
util_Bike_ASC_Auto_deficient,Bike ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,bike_ASC_auto_deficient,,,,,
util_Bike_ASC_Auto_sufficient,Bike ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,bike_ASC_auto_sufficient,,,,,
util_Shared_ride_2_ASC_Zero_auto,Shared ride 2 ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,sr2_ASC_no_auto,,,,,,,,
util_Shared_ride_2_ASC_Auto_deficient,Shared ride 2 ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,sr2_ASC_auto_deficient,,,,,,,,
util_Shared_ride_2_ASC_Auto_sufficient,Shared ride 2 ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,sr2_ASC_auto_sufficient,,,,,,,,
util_Shared_ride_3p_Zero_auto,Shared ride 3+ - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,sr3p_ASC_no_auto,,,,,,,
util_Shared_ride_3p_Auto_deficient,Shared ride 3+ - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,sr3p_ASC_auto_deficient,,,,,,,
util_Shared_ride_3p_Auto_sufficient,Shared ride 3+ - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,sr3p_ASC_auto_sufficient,,,,,,,
util_Walk_to_Transit_Zero_auto,Walk to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,walk_transit_ASC_no_auto,,,,
util_Walk_to_Transit_Auto_deficient,Walk to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,walk_transit_ASC_auto_deficient,,,,
util_Walk_to_Transit_Auto_sufficient,Walk to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,walk_transit_ASC_auto_sufficient,,,,
util_Drive_to_Transit_Zero_auto,Drive to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,drive_transit_ASC_no_auto,,,
util_Drive_to_Transit_Auto_deficient,Drive to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,drive_transit_ASC_auto_deficient,,,
util_Drive_to_Transit_Auto_sufficient,Drive to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,drive_transit_ASC_auto_sufficient,,,
util_Taxi_Zero_auto,Taxi - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,taxi_ASC_no_auto,,
util_Taxi_Auto_deficient,Taxi - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,taxi_ASC_auto_deficient,,
util_Taxi_Auto_sufficient,Taxi - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,taxi_ASC_auto_sufficient,,
util_TNC_Single_Zero_auto,TNC Single - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,tnc_single_ASC_no_auto,
util_TNC_Single_Auto_deficient,TNC Single - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,tnc_single_ASC_auto_deficient,
util_TNC_Single_Auto_sufficient,TNC Single - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,tnc_single_ASC_auto_sufficient,
util_TNC_Shared_Zero_auto,TNC Shared - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,tnc_shared_ASC_no_auto
util_TNC_Shared_Auto_deficient,TNC Shared - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,tnc_shared_ASC_auto_deficient
util_TNC_Shared_Auto_sufficient,TNC Shared - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,tnc_shared_ASC_auto_sufficient
#,joint tour ASCs,,,,,,,,,,,,,, 
util_Joint_Walk_ASC_Zero_auto,Joint - Walk ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,joint_walk_ASC_no_auto,,,,,
util_Joint_Walk_ASC_Auto_deficient,Joint - Walk ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,joint_walk_ASC_auto_deficient,,,,,
util_Joint_Walk_ASC_Auto_sufficient,Joint - Walk ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,joint_walk_ASC_auto_sufficient,,,,,
util_Joint_Bike_ASC_Zero_auto,Joint - Bike ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,joint_bike_ASC_no_auto,,,,
util_Joint_Bike_ASC_Auto_deficient,Joint - Bike ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,joint_bike_ASC_auto_deficient,,,,
util_Joint_Bike_ASC_Auto_sufficient,Joint - Bike ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,joint_bike_ASC_auto_sufficient,,,,
util_Joint_Shared_ride_2_ASC_Zero_auto,Joint - Shared ride 2 ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,joint_sr2_ASC_no_auto,,,,,,,
util_Joint_Shared_ride_2_ASC_Auto_deficient,Joint - Shared ride 2 ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,joint_sr2_ASC_auto_deficient,,,,,,,
util_Joint_Shared_ride_2_ASC_Auto_sufficient,Joint - Shared ride 2 ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,joint_sr2_ASC_auto_sufficient,,,,,,,
util_Joint_Shared_ride_3p_Zero_auto,Joint - Shared ride 3+ - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,joint_sr3p_ASC_no_auto,,,,,,
util_Joint_Shared_ride_3p_Auto_deficient,Joint - Shared ride 3+ - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,joint_sr3p_ASC_auto_deficient,,,,,,
util_Joint_Shared_ride_3p_Auto_sufficient,Joint - Shared ride 3+ - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,joint_sr3p_ASC_auto_sufficient,,,,,,
util_Joint_Walk_to_Transit_Zero_auto,Joint - Walk to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,joint_walk_transit_ASC_no_auto,,,
util_Joint_Walk_to_Transit_Auto_deficient,Joint - Walk to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,joint_walk_transit_ASC_auto_deficient,,,
util_Joint_Walk_to_Transit_Auto_sufficient,Joint - Walk to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,joint_walk_transit_ASC_auto_sufficient,,,
util_Joint_Drive_to_Transit_Zero_auto,Joint - Drive to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,joint_drive_transit_ASC_no_auto,,
util_Joint_Drive_to_Transit_Auto_deficient,Joint - Drive to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,joint_drive_transit_ASC_auto_deficient,,
util_Joint_Drive_to_Transit_Auto_sufficient,Joint - Drive to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,joint_drive_transit_ASC_auto_sufficient,,
util_Joint_Taxi_Zero_auto,Joint - Taxi - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,joint_taxi_ASC_no_auto,,
util_Joint_Taxi_Auto_deficient,Joint - Taxi - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,joint_taxi_ASC_auto_deficient,,
util_Joint_Taxi_Auto_sufficient,Joint - Taxi - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,joint_taxi_ASC_auto_sufficient,,
util_Joint_TNC_Single_Zero_auto,Joint - TNC Single - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,joint_tnc_single_ASC_no_auto,
util_Joint_TNC_Single_Auto_deficient,Joint - TNC Single - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,joint_tnc_single_ASC_auto_deficient,
util_Joint_TNC_Single_Auto_sufficient,Joint - TNC Single - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,joint_tnc_single_ASC_auto_sufficient,
util_Joint_TNC_Shared_Zero_auto,Joint - TNC Shared - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,joint_tnc_shared_ASC_no_auto
util_Joint_TNC_Shared_Auto_deficient,Joint - TNC Shared - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,joint_tnc_shared_ASC_auto_deficient
util_Joint_TNC_Shared_Auto_sufficient,Joint - TNC Shared - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,joint_tnc_shared_ASC_auto_sufficient
util_Walk_to_Transit_dest_CBD,Walk to Transit dest CBD,@df.destination_in_cbd,,,,,,walk_transit_CBD_ASC,,,,
util_Drive_to_Transit_dest_CBD,Drive to Transit dest CBD,@df.destination_in_cbd,,,,,,,drive_transit_CBD_ASC,,,
util_Drive_to_Transit_distance_penalty,Drive to Transit - distance penalty,@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),,,,,,,coef_ivt,,,
#, FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,
util_Walk_not_available_for_long_distances,Walk not available for long distances,@od_skims.max('DIST') > 3,,,,-999,,,,,
util_Bike_not_available_for_long_distances,Bike not available for long distances,@od_skims.max('DISTBIKE') > 8,,,,,-999,,,,
util_Drive_alone_not_available_for_escort_tours,Drive alone not available for escort tours,is_escort,-999,,,,,,,,
#, max(c_densityIndexOrigin*originDensityIndex,originDensityIndexMax),,,,,,,,,1,1,,,
