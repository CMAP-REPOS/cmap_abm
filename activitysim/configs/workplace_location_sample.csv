Label,Description,Expression,coefficient
local_dist,,"_DIST@skims['SOV_TR_M_DIST','MD']",1
dest_county,,_COUNTY@skims['COUNTY'],1
dest_areatype,,_AREATYPE@skims['AREATYPE'],1
util_dist_0_1,"Distance, piecewise linear from 0 to 1 miles","@_DIST.clip(0,1)",coef_dist_0_1
util_dist_1_2,"Distance, piecewise linear from 1 to 2 miles","@(_DIST-1).clip(0,1)",coef_dist_1_2
util_dist_2_5,"Distance, piecewise linear from 2 to 5 miles","@(_DIST-2).clip(0,3)",coef_dist_2_5
util_dist_5_15,"Distance, piecewise linear from 5 to 15 miles","@(_DIST-5).clip(0,10)",coef_dist_5_15
util_dist_15_up,"Distance, piecewise linear for 15+ miles",@(_DIST-15.0).clip(0),coef_dist_15_up
util_dist_0_5_high,"Distance 0 to 5 mi, high and very high income",@(df['income_segment']>=WORK_HIGH_SEGMENT_ID) * _DIST.clip(upper=5),coef_dist_0_5_high
util_dist_15_up_high,"Distance 5+ mi, high and very high income",@(df['income_segment']>=WORK_HIGH_SEGMENT_ID) * (_DIST-5).clip(0),coef_dist_5_up_high
util_size_variable,Size variable,@(df['size_term'] * df['shadow_price_size_term_adjustment']).apply(np.log1p),1
util_utility_adjustment,utility adjustment,@df['shadow_price_utility_adjustment'],1
util_no_attractions,No attractions,@df['size_term']==0,-999
# distance calibration,,,
util_dist_0_5_asc,Distance constants 0-5 miles,@(_DIST > 0) & (_DIST <= 5),dist_0_5_ASC
util_dist_5_10_asc,Distance constants 5-10 miles,@(_DIST > 5) & (_DIST <= 10),dist_5_10_ASC
util_dist_10_15_asc,Distance constants 10-15 miles,@(_DIST > 10) & (_DIST <= 15),dist_10_15_ASC
util_dist_15_20_asc,Distance constants 15-20 miles,@(_DIST > 15) & (_DIST <= 20),dist_15_20_ASC
util_dist_20_50_asc,Distance constants 20-50 miles,@(_DIST > 20) & (_DIST <= 50),dist_20_50_ASC
util_dist_50_up_asc,Distance constants >50 miles,@(_DIST > 50),dist_50_up_ASC
# distance calibration for only CBD dest,,,
util_dist_0_3_cbd_asc,Distance constants 0-3 miles CBD,@(_DIST > 0) & (_DIST <= 3) & (_AREATYPE == 1),dist_0_3_CBD_ASC
util_dist_3_5_cbd_asc,Distance constants 3-5 miles CBD,@(_DIST > 3) & (_DIST <= 5) & (_AREATYPE == 1),dist_3_5_CBD_ASC
util_dist_5_10_cbd_asc,Distance constants 5-10 miles CBD,@(_DIST > 5) & (_DIST <= 10) & (_AREATYPE == 1),dist_5_10_CBD_ASC
util_dist_10_15_cbd_asc,Distance constants 10-15 miles CBD,@(_DIST > 10) & (_DIST <= 15) & (_AREATYPE == 1),dist_10_15_CBD_ASC
util_dist_15_25_cbd_asc,Distance constants 15-25 miles CBD,@(_DIST > 15) & (_DIST <= 25) & (_AREATYPE == 1),dist_15_25_CBD_ASC
util_dist_25_50_cbd_asc,Distance constants 25-50 miles CBD,@(_DIST > 25) & (_DIST <= 50) & (_AREATYPE == 1),dist_25_50_CBD_ASC
# county-county calibration,,,
util_COOK_COOK_ASC,COOK_COOK calibration constant,"@np.where((df['home_county']==17031) & (_COUNTY==17031), 1, 0)",coef_COOK_COOK_asc
util_COOK_DUPAGE_ASC,COOK_DUPAGE calibration constant,"@np.where((df['home_county']==17031) & (_COUNTY==17043), 1, 0)",coef_COOK_DUPAGE_asc
util_COOK_LAKE_IL_ASC,COOK_LAKE_IL calibration constant,"@np.where((df['home_county']==17031) & (_COUNTY==17097), 1, 0)",coef_COOK_LAKE_IL_asc
util_COOK_LAKE_IN_ASC,COOK_LAKE_IN calibration constant,"@np.where((df['home_county']==17031) & (_COUNTY==18089), 1, 0)",coef_COOK_LAKE_IN_asc
util_COOK_WILL_ASC,COOK_WILL calibration constant,"@np.where((df['home_county']==17031) & (_COUNTY==17197), 1, 0)",coef_COOK_WILL_asc
util_DUPAGE_COOK_ASC,DUPAGE_COOK calibration constant,"@np.where((df['home_county']==17043) & (_COUNTY==17031), 1, 0)",coef_DUPAGE_COOK_asc
util_DUPAGE_DUPAGE_ASC,DUPAGE_DUPAGE calibration constant,"@np.where((df['home_county']==17043) & (_COUNTY==17043), 1, 0)",coef_DUPAGE_DUPAGE_asc
util_DUPAGE_KANE_ASC,DUPAGE_KANE calibration constant,"@np.where((df['home_county']==17043) & (_COUNTY==17089), 1, 0)",coef_DUPAGE_KANE_asc
util_DUPAGE_WILL_ASC,DUPAGE_WILL calibration constant,"@np.where((df['home_county']==17043) & (_COUNTY==17197), 1, 0)",coef_DUPAGE_WILL_asc
util_KANE_DUPAGE_ASC,KANE_DUPAGE calibration constant,"@np.where((df['home_county']==17089) & (_COUNTY==17043), 1, 0)",coef_KANE_DUPAGE_asc
util_KANE_KANE_ASC,KANE_KANE calibration constant,"@np.where((df['home_county']==17089) & (_COUNTY==17089), 1, 0)",coef_KANE_KANE_asc
util_KENOSHA_LAKE_IL_ASC,KENOSHA_LAKE_IL calibration constant,"@np.where((df['home_county']==55059) & (_COUNTY==17097), 1, 0)",coef_KENOSHA_LAKE_IL_asc
util_KENOSHA_RACINE_ASC,KENOSHA_RACINE calibration constant,"@np.where((df['home_county']==55059) & (_COUNTY==55101), 1, 0)",coef_KENOSHA_RACINE_asc
util_LAKE_IL_COOK_ASC,LAKE_IL_COOK calibration constant,"@np.where((df['home_county']==17097) & (_COUNTY==17031), 1, 0)",coef_LAKE_IL_COOK_asc
util_LAKE_IL_KENOSHA_ASC,LAKE_IL_KENOSHA calibration constant,"@np.where((df['home_county']==17097) & (_COUNTY==55059), 1, 0)",coef_LAKE_IL_KENOSHA_asc
util_LAKE_IL_LAKE_IL_ASC,LAKE_IL_LAKE_IL calibration constant,"@np.where((df['home_county']==17097) & (_COUNTY==17097), 1, 0)",coef_LAKE_IL_LAKE_IL_asc
util_LAKE_IL_MCHENRY_ASC,LAKE_IL_MCHENRY calibration constant,"@np.where((df['home_county']==17097) & (_COUNTY==17111), 1, 0)",coef_LAKE_IL_MCHENRY_asc
util_MCHENRY_COOK_ASC,MCHENRY_COOK calibration constant,"@np.where((df['home_county']==17111) & (_COUNTY==17031), 1, 0)",coef_MCHENRY_COOK_asc
util_MCHENRY_MCHENRY_ASC,MCHENRY_MCHENRY calibration constant,"@np.where((df['home_county']==17111) & (_COUNTY==17111), 1, 0)",coef_MCHENRY_MCHENRY_asc
util_PORTER_LAKE_IN_ASC,PORTER_LAKE_IN calibration constant,"@np.where((df['home_county']==18127) & (_COUNTY==18089), 1, 0)",coef_PORTER_LAKE_IN_asc
util_PORTER_PORTER_ASC,PORTER_PORTER calibration constant,"@np.where((df['home_county']==18127) & (_COUNTY==18127), 1, 0)",coef_PORTER_PORTER_asc
util_WINNEBAGO_WINNEBAGO_ASC,WINNEBAGO_WINNEBAGO calibration constant,"@np.where((df['home_county']==17201) & (_COUNTY==17201), 1, 0)",coef_WINNEBAGO_WINNEBAGO_asc
util_DEKALB_DEKALB_ASC,DEKALB_DEKALB calibration constant,"@np.where((df['home_county']==17037) & (_COUNTY==17037), 1, 0)",coef_DEKALB_DEKALB_asc
util_KANE_COOK_ASC,KANE_COOK calibration constant,"@np.where((df['home_county']==17089) & (_COUNTY==17031), 1, 0)",coef_KANE_COOK_asc
util_KANKAKEE_COOK_ASC,KANKAKEE_COOK calibration constant,"@np.where((df['home_county']==17091) & (_COUNTY==17031), 1, 0)",coef_KANKAKEE_COOK_asc
util_KANKAKEE_KANKAKEE_ASC,KANKAKEE_KANKAKEE calibration constant,"@np.where((df['home_county']==17091) & (_COUNTY==17091), 1, 0)",coef_KANKAKEE_KANKAKEE_asc
util_KENDALL_KENDALL_ASC,KENDALL_KENDALL calibration constant,"@np.where((df['home_county']==17093) & (_COUNTY==17093), 1, 0)",coef_KENDALL_KENDALL_asc
util_KENOSHA_KENOSHA_ASC,KENOSHA_KENOSHA calibration constant,"@np.where((df['home_county']==55059) & (_COUNTY==55059), 1, 0)",coef_KENOSHA_KENOSHA_asc
util_LAKE_IL_DUPAGE_ASC,LAKE_IL_DUPAGE calibration constant,"@np.where((df['home_county']==17097) & (_COUNTY==17043), 1, 0)",coef_LAKE_IL_DUPAGE_asc
util_LAKE_IN_COOK_ASC,LAKE_IN_COOK calibration constant,"@np.where((df['home_county']==18089) & (_COUNTY==17031), 1, 0)",coef_LAKE_IN_COOK_asc
util_LAKE_IN_LAKE_IN_ASC,LAKE_IN_LAKE_IN calibration constant,"@np.where((df['home_county']==18089) & (_COUNTY==18089), 1, 0)",coef_LAKE_IN_LAKE_IN_asc
util_MCHENRY_LAKE_IL_ASC,MCHENRY_LAKE_IL calibration constant,"@np.where((df['home_county']==17111) & (_COUNTY==17097), 1, 0)",coef_MCHENRY_LAKE_IL_asc
util_PORTER_COOK_ASC,PORTER_COOK calibration constant,"@np.where((df['home_county']==18127) & (_COUNTY==17031), 1, 0)",coef_PORTER_COOK_asc
util_RACINE_LAKE_IL_ASC,RACINE_LAKE_IL calibration constant,"@np.where((df['home_county']==55101) & (_COUNTY==17097), 1, 0)",coef_RACINE_LAKE_IL_asc
util_RACINE_RACINE_ASC,RACINE_RACINE calibration constant,"@np.where((df['home_county']==55101) & (_COUNTY==55101), 1, 0)",coef_RACINE_RACINE_asc
util_WALWORTH_WALWORTH_ASC,WALWORTH_WALWORTH calibration constant,"@np.where((df['home_county']==55127) & (_COUNTY==55127), 1, 0)",coef_WALWORTH_WALWORTH_asc
util_WILL_COOK_ASC,WILL_COOK calibration constant,"@np.where((df['home_county']==17197) & (_COUNTY==17031), 1, 0)",coef_WILL_COOK_asc
util_WILL_KANE_ASC,WILL_KANE calibration constant,"@np.where((df['home_county']==17197) & (_COUNTY==17089), 1, 0)",coef_WILL_KANE_asc
util_WILL_WILL_ASC,WILL_WILL calibration constant,"@np.where((df['home_county']==17197) & (_COUNTY==17197), 1, 0)",coef_WILL_WILL_asc
