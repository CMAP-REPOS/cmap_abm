Description,Expression,work,univ,school,escort,shopping,eatout,othmaint,social,othdiscr,atwork
,"_od_DIST@od_skims[('SOV_TR_M_DIST', 'MD')]",1,1,1,1,1,1,1,1,1,1
,"_dp_DIST@dp_skims[('SOV_TR_M_DIST', 'MD')]",1,1,1,1,1,1,1,1,1,1
Not available if walk tour not within walking distance,@(df.tour_mode=='WALK') & (od_skims['DISTWALK'] > max_walk_distance),-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
Not available if walk tour not within walking distance,@(df.tour_mode=='WALK') & (dp_skims['DISTWALK'] > max_walk_distance),-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
Not available if bike tour not within biking distance,@(df.tour_mode=='BIKE') & (od_skims['DISTBIKE'] > max_bike_distance),-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
Not available if bike tour not within biking distance,@(df.tour_mode=='BIKE') & (dp_skims['DISTBIKE'] > max_bike_distance),-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
#If transit tour is not in walk sub-zone it must be walkable,,,,,,,,,,,
size term,"@np.log1p(size_terms.get(df.dest_taz, df.purpose))",1,1,1,1,1,1,1,1,1,1
no attractions,"@size_terms.get(df.dest_taz, df.purpose) == 0",-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
#stop zone CBD area type,"@reindex(land_use.AreaType, df.dest_taz) < cbd_threshold",,,,,,,,,,
distance (calibration adjustment individual - inbound),@(~df.is_joint & ~df.outbound) * (_od_DIST + _dp_DIST),coef_util_distance_work_inbound,coef_util_distance_univ,coef_util_distance_school,coef_util_distance_escort,coef_util_distance_shopping,coef_util_distance_eatout,coef_util_distance_othmaint,coef_util_distance_social,coef_util_distance_othdiscr,coef_util_distance_atwork
distance (calibration adjustment individual - outbound),@(~df.is_joint & df.outbound) * (_od_DIST + _dp_DIST),coef_util_distance_work_outbound,coef_util_distance_univ,coef_util_distance_school,coef_util_distance_escort,coef_util_distance_shopping,coef_util_distance_eatout,coef_util_distance_othmaint,coef_util_distance_social,coef_util_distance_othdiscr,coef_util_distance_atwork
distance (calibration adjustment joint),@df.is_joint * (_od_DIST + _dp_DIST),,,,coef_distance_joint,coef_distance_joint,coef_distance_joint,coef_distance_joint,coef_distance_joint,coef_distance_joint,
stop proximity to home (outbound),@df.outbound * _od_DIST,coef_prox_home_outbound_work,,,,,,,,,
stop proximity to home (inbound),@~df.outbound * _od_DIST,coef_prox_home_inbound_work,,,,,,,,,
stop proximity to main destination (outbound),@df.outbound * _dp_DIST,coef_prox_dest_outbound_work,,,,,,,,,
stop proximity to main destination (inbound),@~df.outbound * _od_DIST,0,,,,,,,,,
