Description,Target,Expression,
,is_joint,(df.number_of_participants > 1),
,is_indiv,(df.number_of_participants == 1),
,is_atwork_subtour,~df.parent_tour_id.isnull(),
#,,,
,dest_density_index,"reindex(land_use.density_index, df[dest_col_name])",
#,,,
,tour_type,"df.get('tour_type', default='work')",
# cost coef,,,
,income_exponent,"np.where(tour_type == 'work', 0.6, 0.5)",
,c_cost,"coef_inc_adj_cost / (np.maximum(df.income,1000)**income_exponent)",
# ivt coef,,,
,time_factor,"np.where(tour_type=='work', df.time_factor_work, df.time_factor_nonwork)",
,c_ivt,coef_ivt * time_factor,
#,,,
,vot_da,c_ivt / c_cost * 0.6,
,vot_s2,vot_da / cost_share_s2,
,vot_s3,vot_da / cost_share_s3,
Walk transit,vot_wt,c_ivt / c_cost * 0.6,
PNR transit,vot_pt,c_ivt / c_cost * 0.6,
KNR transit,vot_kt,c_ivt / c_cost * 0.6,
,_vot_bin_da,"np.where(vot_da < vot_threshold_low, 1, np.where(vot_da < vot_threshold_med, 2, 3))",
,_vot_bin_s2,"np.where(vot_s2 < vot_threshold_low, 1, np.where(vot_s2 < vot_threshold_med, 2, 3))",
,_vot_bin_s3,"np.where(vot_s3 < vot_threshold_low, 1, np.where(vot_s3 < vot_threshold_med, 2, 3))",
,_vot_bin_wt,"np.where(vot_wt < vot_threshold_low, 1, np.where(vot_wt < vot_threshold_med, 2, 3))",
,_vot_bin_pt,"np.where(vot_pt < vot_threshold_low, 1, np.where(vot_pt < vot_threshold_med, 2, 3))",
,_vot_bin_kt,"np.where(vot_kt < vot_threshold_low, 1, np.where(vot_kt < vot_threshold_med, 2, 3))",
#,ownsTransponder,df.transponderOwnership,
Transponder ownership model not implemented,ownsTransponder,1,
# vot-indexed skims,,,
DA skim based on Transponder ownership,da_dist_skims,"(np.where(ownsTransponder==1, odt_skims['SOV_TR_L_DIST'], odt_skims['SOV_NT_L_DIST']) * (_vot_bin_da == 1)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_M_DIST'], odt_skims['SOV_NT_M_DIST']) * (_vot_bin_da == 2)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_H_DIST'], odt_skims['SOV_NT_H_DIST']) * (_vot_bin_da == 3))",
,da_cost_skims,"(np.where(ownsTransponder==1, odt_skims['SOV_TR_L_TOLLCOST'], odt_skims['SOV_NT_L_TOLLCOST']) * (_vot_bin_da == 1)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_M_TOLLCOST'], odt_skims['SOV_NT_M_TOLLCOST']) * (_vot_bin_da == 2)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_H_TOLLCOST'], odt_skims['SOV_NT_H_TOLLCOST']) * (_vot_bin_da == 3))",
,da_time_skims,"(np.where(ownsTransponder==1, odt_skims['SOV_TR_L_TIME'], odt_skims['SOV_NT_L_TIME']) * (_vot_bin_da == 1)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_M_TIME'], odt_skims['SOV_NT_M_TIME']) * (_vot_bin_da == 2)) + (np.where(ownsTransponder==1, odt_skims['SOV_TR_H_TIME'], odt_skims['SOV_NT_H_TIME']) * (_vot_bin_da == 3))",
,s2_dist_skims,(((odt_skims['HOV2_L_DIST']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV2_M_DIST']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV2_H_DIST']) * (_vot_bin_s2 == 3))),
,s2_cost_skims,(((odt_skims['HOV2_L_TOLLCOST']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV2_M_TOLLCOST']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV2_H_TOLLCOST']) * (_vot_bin_s2 == 3))),
,s2_time_skims,(((odt_skims['HOV2_L_TIME']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV2_M_TIME']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV2_H_TIME']) * (_vot_bin_s2 == 3))),
,s3_dist_skims,(((odt_skims['HOV3_L_DIST']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV3_M_DIST']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV3_H_DIST']) * (_vot_bin_s2 == 3))),
,s3_cost_skims,(((odt_skims['HOV3_L_TOLLCOST']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV3_M_TOLLCOST']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV3_H_TOLLCOST']) * (_vot_bin_s2 == 3))),
,s3_time_skims,(((odt_skims['HOV3_L_TIME']) * (_vot_bin_s2 == 1)) + ((odt_skims['HOV3_M_TIME']) * (_vot_bin_s2 == 2)) + ((odt_skims['HOV3_H_TIME']) * (_vot_bin_s2 == 3))),
#,,,
walk transit ivt by transit mode,wt_busloc_ivt_skims,(((odt_skims['BUSLOCIVTT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSLOCIVTT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSLOCIVTT_WALK_H']) * (_vot_bin_wt == 3))),
,wt_busexp_ivt_skims,(((odt_skims['BUSEXPIVTT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSEXPIVTT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSEXPIVTT_WALK_H']) * (_vot_bin_wt == 3))),
,wt_ctarail_ivt_skims,(((odt_skims['CTARAILIVTT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CTARAILIVTT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CTARAILIVTT_WALK_H']) * (_vot_bin_wt == 3))),
,wt_metrarail_ivt_skims,(((odt_skims['METRARAILIVTT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['METRARAILIVTT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['METRARAILIVTT_WALK_H']) * (_vot_bin_wt == 3))),
pnr transit ivt by transit mode,pt_busloc_ivt_skims_out,(((odt_skims['BUSLOCIVTT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSLOCIVTT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSLOCIVTT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_busloc_ivt_skims_inb,(((dot_skims['BUSLOCIVTT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['BUSLOCIVTT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['BUSLOCIVTT_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_busexp_ivt_skims_out,(((odt_skims['BUSEXPIVTT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSEXPIVTT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSEXPIVTT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_busexp_ivt_skims_inb,(((dot_skims['BUSEXPIVTT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['BUSEXPIVTT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['BUSEXPIVTT_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_ctarail_ivt_skims_out,(((odt_skims['CTARAILIVTT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CTARAILIVTT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CTARAILIVTT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_ctarail_ivt_skims_inb,(((dot_skims['CTARAILIVTT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['CTARAILIVTT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['CTARAILIVTT_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_metrarail_ivt_skims_out,(((odt_skims['METRARAILIVTT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['METRARAILIVTT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['METRARAILIVTT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_metrarail_ivt_skims_inb,(((dot_skims['METRARAILIVTT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['METRARAILIVTT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['METRARAILIVTT_PNRIN_H']) * (_vot_bin_wt == 3))),
knr transit ivt by transit mode,kt_busloc_ivt_skims_out,(((odt_skims['BUSLOCIVTT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSLOCIVTT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSLOCIVTT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_busloc_ivt_skims_inb,(((dot_skims['BUSLOCIVTT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['BUSLOCIVTT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['BUSLOCIVTT_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_busexp_ivt_skims_out,(((odt_skims['BUSEXPIVTT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['BUSEXPIVTT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['BUSEXPIVTT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_busexp_ivt_skims_inb,(((dot_skims['BUSEXPIVTT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['BUSEXPIVTT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['BUSEXPIVTT_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_ctarail_ivt_skims_out,(((odt_skims['CTARAILIVTT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CTARAILIVTT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CTARAILIVTT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_ctarail_ivt_skims_inb,(((dot_skims['CTARAILIVTT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['CTARAILIVTT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['CTARAILIVTT_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_metrarail_ivt_skims_out,(((odt_skims['METRARAILIVTT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['METRARAILIVTT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['METRARAILIVTT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_metrarail_ivt_skims_inb,(((dot_skims['METRARAILIVTT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['METRARAILIVTT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['METRARAILIVTT_KNRIN_H']) * (_vot_bin_wt == 3))),
# walk transit,,,
,wt_ivt_skims,wt_busloc_ivt_skims + wt_busexp_ivt_skims + wt_ctarail_ivt_skims + wt_metrarail_ivt_skims,
,wt_iwait_skims,(((odt_skims['FIRSTWAIT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FIRSTWAIT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FIRSTWAIT_WALK_H']) * (_vot_bin_wt == 3))),
,wt_xwait_skims,(((odt_skims['XFERWAIT_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWAIT_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWAIT_WALK_H']) * (_vot_bin_wt == 3))),
,wt_xfers_skims,(((odt_skims['XFERS_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERS_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERS_WALK_H']) * (_vot_bin_wt == 3))),
#,wt_wacc_skims,(((odt_skims['ACC_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['ACC_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['ACC_WALK_H']) * (_vot_bin_wt == 3))),
,wt_waux_skims,(((odt_skims['XFERWALK_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWALK_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWALK_WALK_H']) * (_vot_bin_wt == 3))),
#,wt_wegr_skims,(((odt_skims['EGR_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['EGR_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['EGR_WALK_H']) * (_vot_bin_wt == 3))),
,wt_fare_skims,(((odt_skims['FARE_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FARE_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FARE_WALK_H']) * (_vot_bin_wt == 3))),
,wt_crowd_skims,(((odt_skims['CROWD_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CROWD_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CROWD_WALK_H']) * (_vot_bin_wt == 3))),
,wt_cappen_skims,(((odt_skims['CAPPEN_WALK_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CAPPEN_WALK_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CAPPEN_WALK_H']) * (_vot_bin_wt == 3))),
# park-and-ride transit,,,
,pt_ivt_skims_out,pt_busloc_ivt_skims_out + pt_busexp_ivt_skims_out + pt_ctarail_ivt_skims_out + pt_metrarail_ivt_skims_out,
,pt_ivt_skims_inb,pt_busloc_ivt_skims_inb + pt_busexp_ivt_skims_inb + pt_ctarail_ivt_skims_inb + pt_metrarail_ivt_skims_inb,
,pt_iwait_skims_out,(((odt_skims['FIRSTWAIT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FIRSTWAIT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FIRSTWAIT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_iwait_skims_inb,(((dot_skims['FIRSTWAIT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['FIRSTWAIT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['FIRSTWAIT_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_xwait_skims_out,(((odt_skims['XFERWAIT_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWAIT_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWAIT_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_xwait_skims_inb,(((dot_skims['XFERWAIT_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERWAIT_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERWAIT_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_xfers_skims_out,(((odt_skims['XFERS_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERS_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERS_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_xfers_skims_inb,(((dot_skims['XFERS_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERS_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERS_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_dacc_skims_out,(((odt_skims['ACC_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['ACC_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['ACC_PNROUT_H']) * (_vot_bin_wt == 3))),
#,pt_wacc_skims_inb,(((dot_skims['ACC_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['ACC_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['ACC_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_waux_skims_out,(((odt_skims['XFERWALK_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWALK_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWALK_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_waux_skims_inb,(((dot_skims['XFERWALK_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERWALK_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERWALK_PNRIN_H']) * (_vot_bin_wt == 3))),
#,pt_wegr_skims_out,(((odt_skims['EGR_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['EGR_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['EGR_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_degr_skims_inb,(((dot_skims['EGR_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['EGR_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['EGR_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_fare_skims_out,(((odt_skims['FARE_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FARE_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FARE_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_fare_skims_inb,(((dot_skims['FARE_PNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['FARE_PNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['FARE_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_crowd_skims_out,(((odt_skims['CROWD_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CROWD_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CROWD_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_crowd_skims_inb,(((odt_skims['CROWD_PNRIN_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CROWD_PNRIN_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CROWD_PNRIN_H']) * (_vot_bin_wt == 3))),
,pt_cappen_skims_out,(((odt_skims['CAPPEN_PNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CAPPEN_PNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CAPPEN_PNROUT_H']) * (_vot_bin_wt == 3))),
,pt_cappen_skims_inb,(((odt_skims['CAPPEN_PNRIN_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CAPPEN_PNRIN_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CAPPEN_PNRIN_H']) * (_vot_bin_wt == 3))),
# kiss-and-ride transit,,,
,kt_ivt_skims_out,kt_busloc_ivt_skims_out + kt_busexp_ivt_skims_out + kt_ctarail_ivt_skims_out + kt_metrarail_ivt_skims_out,
,kt_ivt_skims_inb,kt_busloc_ivt_skims_inb + kt_busexp_ivt_skims_inb + kt_ctarail_ivt_skims_inb + kt_metrarail_ivt_skims_inb,
,kt_iwait_skims_out,(((odt_skims['FIRSTWAIT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FIRSTWAIT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FIRSTWAIT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_iwait_skims_inb,(((dot_skims['FIRSTWAIT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['FIRSTWAIT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['FIRSTWAIT_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_xwait_skims_out,(((odt_skims['XFERWAIT_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWAIT_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWAIT_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_xwait_skims_inb,(((dot_skims['XFERWAIT_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERWAIT_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERWAIT_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_xfers_skims_out,(((odt_skims['XFERS_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERS_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERS_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_xfers_skims_inb,(((dot_skims['XFERS_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERS_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERS_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_dacc_skims_out,(((odt_skims['ACC_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['ACC_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['ACC_KNROUT_H']) * (_vot_bin_wt == 3))),
#,kt_wacc_skims_inb,(((dot_skims['ACC_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['ACC_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['ACC_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_waux_skims_out,(((odt_skims['XFERWALK_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['XFERWALK_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['XFERWALK_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_waux_skims_inb,(((dot_skims['XFERWALK_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['XFERWALK_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['XFERWALK_KNRIN_H']) * (_vot_bin_wt == 3))),
#,kt_wegr_skims_out,(((odt_skims['EGR_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['EGR_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['EGR_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_degr_skims_inb,(((dot_skims['EGR_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['EGR_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['EGR_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_fare_skims_out,(((odt_skims['FARE_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['FARE_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['FARE_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_fare_skims_inb,(((dot_skims['FARE_KNRIN_L']) * (_vot_bin_wt == 1)) + ((dot_skims['FARE_KNRIN_M']) * (_vot_bin_wt == 2)) + ((dot_skims['FARE_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_crowd_skims_out,(((odt_skims['CROWD_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CROWD_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CROWD_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_crowd_skims_inb,(((odt_skims['CROWD_KNRIN_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CROWD_KNRIN_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CROWD_KNRIN_H']) * (_vot_bin_wt == 3))),
,kt_cappen_skims_out,(((odt_skims['CAPPEN_KNROUT_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CAPPEN_KNROUT_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CAPPEN_KNROUT_H']) * (_vot_bin_wt == 3))),
,kt_cappen_skims_inb,(((odt_skims['CAPPEN_KNRIN_L']) * (_vot_bin_wt == 1)) + ((odt_skims['CAPPEN_KNRIN_M']) * (_vot_bin_wt == 2)) + ((odt_skims['CAPPEN_KNRIN_H']) * (_vot_bin_wt == 3))),
# Access egress time,,,
walk time by transit mode,origin_busloc_time,"reindex(land_use.walk_dist_local_bus, df[ORIGIN])*60/walkSpeed",
,origin_busexp_time,"reindex(land_use.walk_dist_express_bus, df[ORIGIN])*60/walkSpeed",
,origin_ctarail_time,"reindex(land_use.walk_dist_cta_rail, df[ORIGIN])*60/walkSpeed",
,origin_metrarail_time,"reindex(land_use.walk_dist_metra_rail, df[ORIGIN])*60/walkSpeed",
,dest_busloc_time,"reindex(land_use.walk_dist_local_bus, df[DESTINATION])*60/walkSpeed",
,dest_busexp_time,"reindex(land_use.walk_dist_express_bus, df[DESTINATION])*60/walkSpeed",
,dest_ctarail_time,"reindex(land_use.walk_dist_cta_rail, df[DESTINATION])*60/walkSpeed",
,dest_metrarail_time,"reindex(land_use.walk_dist_metra_rail, df[DESTINATION])*60/walkSpeed",
"walk transit, origin to closest stop, outbound",wt_wacc_time,"np.minimum(np.minimum(np.where(wt_busloc_ivt_skims>0,origin_busloc_time,9999),np.where(wt_busexp_ivt_skims>0,origin_busexp_time,9999)),np.where(wt_ctarail_ivt_skims>0,origin_ctarail_time,9999),np.where(wt_metrarail_ivt_skims>0,origin_metrarail_time,9999))",
"walk transit, closest stop to destnation, outbound",wt_wegr_time,"np.minimum(np.minimum(np.where(wt_busloc_ivt_skims>0,dest_busloc_time,9999),np.where(wt_busexp_ivt_skims>0,dest_busexp_time,9999)),np.where(wt_ctarail_ivt_skims>0,dest_ctarail_time,9999),np.where(wt_metrarail_ivt_skims>0,dest_metrarail_time,9999))",
"pnr transit, closest stop to destnation, outbound",pt_wegr_time_out,"np.minimum(np.minimum(np.where(pt_busloc_ivt_skims_out>0,dest_busloc_time,9999),np.where(pt_busexp_ivt_skims_out>0,dest_busexp_time,9999)),np.where(pt_ctarail_ivt_skims_out>0,dest_ctarail_time,9999),np.where(pt_metrarail_ivt_skims_out>0,dest_metrarail_time,9999))",
"pnr transit, origin to closest stop, inbound",pt_wacc_time_inb,"np.minimum(np.minimum(np.where(pt_busloc_ivt_skims_inb>0,origin_busloc_time,9999),np.where(pt_busexp_ivt_skims_inb>0,origin_busexp_time,9999)),np.where(pt_ctarail_ivt_skims_inb>0,origin_ctarail_time,9999),np.where(pt_metrarail_ivt_skims_inb>0,origin_metrarail_time,9999))",
"knr transit, closest stop to destnation, outbound",kt_wegr_time_out,"np.minimum(np.minimum(np.where(kt_busloc_ivt_skims_out>0,dest_busloc_time,9999),np.where(kt_busexp_ivt_skims_out>0,dest_busexp_time,9999)),np.where(kt_ctarail_ivt_skims_out>0,dest_ctarail_time,9999),np.where(kt_metrarail_ivt_skims_out>0,dest_metrarail_time,9999))",
"knr transit, origin to closest stop, inbound",kt_wacc_time_inb,"np.minimum(np.minimum(np.where(kt_busloc_ivt_skims_inb>0,origin_busloc_time,9999),np.where(kt_busexp_ivt_skims_inb>0,origin_busexp_time,9999)),np.where(kt_ctarail_ivt_skims_inb>0,origin_ctarail_time,9999),np.where(kt_metrarail_ivt_skims_inb>0,origin_metrarail_time,9999))",
#,,,
,inbound,~df.outbound,
,first_trip,df.trip_num == 1,
,last_trip,df.trip_num == df.trip_count,
#atwork subtours,,,
#FIXME tripModeChoice uec wrongly conflates these with tour_mode_is_bike?,,,
,parent_tour_mode,"reindex(tours.tour_mode, df.parent_tour_id).fillna('')",
,work_tour_is_SOV,parent_tour_mode=='DRIVEALONE',
,work_tour_is_bike,parent_tour_mode=='BIKE',
#,,,
,i_tour_mode,df.tour_mode.map(I_MODE_MAP),
,tour_mode_is_SOV,i_tour_mode.isin(I_SOV_MODES),
,tour_mode_is_SR2,i_tour_mode.isin(I_SR2_MODES),
,tour_mode_is_SR3,i_tour_mode.isin(I_SR3P_MODES),
,tour_mode_is_auto,i_tour_mode.isin(I_AUTO_MODES),
,tour_mode_is_walk,i_tour_mode == I_WALK_MODE,
,tour_mode_is_bike,i_tour_mode == I_BIKE_MODE,
,tour_mode_is_walk_transit,i_tour_mode.isin(I_WALK_TRANSIT_MODES),
,tour_mode_is_pnr_transit,i_tour_mode == I_PNR_TRANSIT,
,tour_mode_is_knr_transit,i_tour_mode == I_KNR_TRANSIT,
,tour_mode_is_tnc_transit,i_tour_mode == I_TNC_TRANSIT,
,tour_mode_is_ride_hail,i_tour_mode.isin(I_RIDE_HAIL_MODES),
,tour_mode_is_schbus,i_tour_mode == I_SCHBUS_MODE,
#,,,
,inbound,~df.outbound,
,first_trip,df.trip_num == 1,
,last_trip,df.trip_num == df.trip_count,
origin terminal time not counted at home,_origin_terminal_time,"np.where(df.outbound & first_trip, 0, reindex(land_use.TERMINAL, df[ORIGIN]))",
dest terminal time not counted at home,_dest_terminal_time,"np.where(inbound & last_trip, 0, reindex(land_use.TERMINAL, df[DESTINATION]))",
,total_terminal_time,_origin_terminal_time + _dest_terminal_time,
#,,,
,free_parking_available,(df.tour_type == 'work') & df.free_parking_at_work,
,dest_hourly_peak_parking_cost,"reindex(land_use.PRKCST, df[DESTINATION]) * 100",
,origin_hourly_peak_parking_cost,"reindex(land_use.PRKCST, df[ORIGIN]) * 100",
,origin_duration,"np.where(first_trip, np.where(inbound, np.minimum(df.duration / 2, 8) * ~free_parking_available,0), 1)",
,dest_duration,"np.where(last_trip, np.where(inbound, np.minimum(df.duration / 2, 8) * ~free_parking_available, 0), 1)",
,origin_parking_cost,origin_duration*origin_hourly_peak_parking_cost,
,dest_parking_cost,dest_duration*dest_hourly_peak_parking_cost,
,total_parking_cost,(origin_parking_cost + dest_parking_cost) / 2.0,
#,trip_topology,"np.where(df.outbound, reindex(land_use.TOPOLOGY, df[DESTINATION]), reindex(land_use.TOPOLOGY, df[ORIGIN]))",
,trip_topology,1,
,density_index,"np.where(df.outbound, reindex(land_use.density_index, df[DESTINATION]), reindex(land_use.density_index, df[ORIGIN]))",
,origin_density_index,"np.where(df.outbound, reindex(land_use.density_index, df[ORIGIN]), reindex(land_use.density_index, df[DESTINATION]))",
# RIDEHAIL,,,
,origin_density_measure,"(reindex(land_use.TOTPOP, df[orig_col_name]) + reindex(land_use.TOTEMP, df[orig_col_name])) / (reindex(land_use.acres.clip(lower=1), df[orig_col_name]) / 640)",
,origin_density,"pd.cut(origin_density_measure, bins=[-np.inf, 500, 2000, 5000, 15000, np.inf], labels=[5, 4, 3, 2, 1]).astype(int)",
,origin_zone_taxi_wait_time_mean,"origin_density.map({k: v for k, v in Taxi_waitTime_mean.items()})",
,origin_zone_taxi_wait_time_sd,"origin_density.map({k: v for k, v in Taxi_waitTime_sd.items()})",
# ,, Note that the mean and standard deviation are not the values for the distribution itself, but of the underlying normal distribution it is derived from
,origTaxiWaitTime,"rng.lognormal_for_df(df, mu=origin_zone_taxi_wait_time_mean, sigma=origin_zone_taxi_wait_time_sd, broadcast=True, scale=True).clip(min_waitTime, max_waitTime)",
,origin_zone_singleTNC_wait_time_mean,"origin_density.map({k: v for k, v in TNC_single_waitTime_mean.items()})",
,origin_zone_singleTNC_wait_time_sd,"origin_density.map({k: v for k, v in TNC_single_waitTime_sd.items()})",
,origSingleTNCWaitTime,"rng.lognormal_for_df(df, mu=origin_zone_singleTNC_wait_time_mean, sigma=origin_zone_singleTNC_wait_time_sd, broadcast=True, scale=True).clip(min_waitTime, max_waitTime)",
,origin_zone_sharedTNC_wait_time_mean,"origin_density.map({k: v for k, v in TNC_shared_waitTime_mean.items()})",
,origin_zone_sharedTNC_wait_time_sd,"origin_density.map({k: v for k, v in TNC_shared_waitTime_sd.items()})",
,origSharedTNCWaitTime,"rng.lognormal_for_df(df, mu=origin_zone_sharedTNC_wait_time_mean, sigma=origin_zone_sharedTNC_wait_time_sd, broadcast=True, scale=True).clip(min_waitTime, max_waitTime)",
#,,,
,sov_available,da_time_skims>0,
,hov2_available,s2_time_skims>0,
,hov3_available,s3_time_skims>0,
,sovtoll_available,da_cost_skims>0,
,hov2toll_available,s2_cost_skims>0,
,hov3toll_available,s3_cost_skims>0,
,walk_transit_available,(wt_wacc_time + wt_wegr_time < 9999),
,pnr_transit_out_available,(pt_wegr_time_out < 9999),
,pnr_transit_inb_available,(pt_wacc_time_inb < 9999),
,knr_transit_out_available,(kt_wegr_time_out < 9999),
,knr_transit_inb_available,(kt_wacc_time_inb < 9999),
,tnc_transit_out_available,(kt_wegr_time_out < 9999),
,tnc_transit_inb_available,(kt_wacc_time_inb < 9999),
,school_tour,(df.tour_type == 'school'),
